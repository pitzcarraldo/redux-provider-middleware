{"version":3,"sources":["../src/providerMiddleware.js"],"names":[],"mappings":";;;kBAAwB;AAAT,SAAS,kBAAT,GAA4C;oCAAb;;GAAa;;AACzD,SAAO;QAAG;QAAU;WAAe;aAAQ,kBAAU;AACnD,YAAM,aAAa,MAAb,CAD6C;AAEnD,YAAM,YAAY,YAAY,MAAZ,CAAmB,UAAC,aAAD,EAAgB,QAAhB,EAA6B;AAChE,cAAM,gBAAgB,aAAhB,CAD0D;AAEhE,cAAM,WAAW,IAAI,QAAJ,EAAX,CAF0D;AAGhE,wBAAc,SAAS,IAAT,CAAd,GAA+B,SAAS,IAAT,CAAc,WAAW,OAAX,IAAsB,EAAtB,CAA7C,CAHgE;AAIhE,iBAAO,aAAP,CAJgE;SAA7B,EAKlC,EALe,CAAZ,CAF6C;;AASnD,YAAI,WAAW,KAAX,EAAkB;AACpB,iBAAO,WAAW,KAAX,CAAiB,QAAjB,EAA2B,QAA3B,EAAqC,SAArC,CAAP,CADoB;SAAtB;;AAIA,mBAAW,SAAX,GAAuB,SAAvB,CAbmD;AAcnD,eAAO,KAAK,UAAL,CAAP,CAdmD;OAAV;KAAR;GAA5B,CADkD;CAA5C","file":"providerMiddleware.js","sourcesContent":["export default function providerMiddleware(...willProvide) {\n  return ({ dispatch, getState }) => next => action => {\n    const nextAction = action;\n    const providers = willProvide.reduce((prevProviders, Provider) => {\n      const nextProviders = prevProviders;\n      const provider = new Provider();\n      nextProviders[provider.name] = provider.$get(nextAction.context || {});\n      return nextProviders;\n    }, {});\n\n    if (nextAction.thunk) {\n      return nextAction.thunk(dispatch, getState, providers);\n    }\n\n    nextAction.providers = providers;\n    return next(nextAction);\n  };\n}\n"]}
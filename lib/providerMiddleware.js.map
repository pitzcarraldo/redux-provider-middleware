{"version":3,"sources":["../src/providerMiddleware.js"],"names":[],"mappings":";;;;;;;;;;;;qBACwB;;;;AADxB,IAAI,YAAY,EAAZ;AACW,SAAS,kBAAT,GAA4C;;;oCAAb;;GAAa;;AACzD,SAAO,gBAA4B;QAAzB,yBAAyB;QAAf,yBAAe;;AACjC,gBAAY,YAAY,MAAZ,CAAmB,UAAC,aAAD,EAAgB,QAAhB,EAA6B;AAC1D,oBAAc,SAAS,IAAT,CAAd,GAA+B,SAAS,IAAT,CAAc,EAAE,kBAAF,EAAY,kBAAZ,EAAd,CAA/B,CAD0D;AAE1D,aAAO,aAAP,CAF0D;KAA7B,EAG5B,EAHS,CAAZ,CADiC;AAKjC,WAAO;;;AAAQ,2BAAM,MAAN;;;;;;;;4BAEP,OAAO,MAAP,KAAkB,UAAlB,IAAgC,OAAO,IAAP,IAAe,OAAO,IAAP,CAAY,OAAZ,CAAoB,QAApB,IAAgC,CAAC,CAAD;;;;;;6BAClE,OAAO,SAAP;;;AAAf;;;uDAEK,KAAK,OAAO,MAAP,KAAkB,UAAlB,GAA+B,OAAO,SAAP,CAA/B,GAAmD,MAAnD;;;;;uDAEL,KAAK,EAAE,MAAM,kBAAN,EAA0B,oBAA5B,EAAL;;;;;;;;;;;WAPI;;;;;;;;KAAR,CAL0B;GAA5B,CADkD;CAA5C","file":"providerMiddleware.js","sourcesContent":["let PROVIDERS = {};\nexport default function providerMiddleware(...willProvide) {\n  return ({ dispatch, getState }) => {\n    PROVIDERS = willProvide.reduce((prevProviders, provider) => {\n      prevProviders[provider.name] = provider.$get({ dispatch, getState });\n      return prevProviders;\n    }, {});\n    return next => async action => {\n      try {\n        if (typeof action === 'function' && action.name && action.name.indexOf('callee') > -1) {\n          action = await action(PROVIDERS);\n        }\n        return next(typeof action === 'function' ? action(PROVIDERS) : action);\n      } catch (error) {\n        return next({ type: '@@provider/ERROR', payload: error });\n      }\n    };\n  };\n}\n"]}